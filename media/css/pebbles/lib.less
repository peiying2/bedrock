// THIS FILE SHOULD OUTPUT NOTHING!
//
// As this file is included in many places (for variable/mixin access),
// it must output nothing for performance reasons.
//
// IF IT'S NOT A MIXIN OR VARIABLE, IT DOESN'T GO HERE!


// Fonts and color

// The custom X-LocaleSpecific font family is defined with a @font-face rule in
// locale-specific stylesheets which can be found at /media/css/l10n/. See
// /docs/l10n.rst for details.
@base-font-family: 'Fira Sans', X-LocaleSpecific, sans-serif;

@base-font-size: 100%;

// Use rem (root em) units for font-size.
// Assumes default 16px to match sizes but will respect user preferences.
// Pass through any units that aren't px or rem
.font-size(@value) {
    font-size: @value;
}

// When unit is pixels, pass it through and convert to rem
.font-size(@value) when (ispixel(@value)) {
    font-size: @value;
    .font-size(unit(@value / 16, rem));
}

// When unit is rem, convert it to pixels and pass it through
.font-size(@value) when (isunit(@value, rem)) {
    font-size: unit(@value * 16, px);
    font-size: @value;
}

// Text colors
@text-color-primary:   #333;
@text-color-secondary: #484848;
@text-color-tertiary:  #666;
@text-color-light:     #bbb;

// Brand colors
@color-mozred:  #c13832;
@color-mozblue: #0c99d5;
@color-mozgray: #56565a;

.fira-sans() {
    font-family: @base-font-family;
}

.fira-sans-light() {
    font-family: 'Fira Sans Light', X-LocaleSpecific-Light, @base-font-family;
    font-weight: normal;
}


// Media queries
@mq-homer:    ~'screen and (min-width: 1400px)';
@mq-marge:    ~'screen and (min-width: 1000px)';
@mq-bart:     ~'screen and (min-width: 760px)';
@mq-lisa:     ~'screen and (min-width: 480px)';
@mq-maggie:   ~'screen and (max-width: 480px)';

@mq-highres:  ~'only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-resolution: 1.5dppx), only screen and (min-resolution: 144dpi)';


// Content widths
@width-homer:   1380px;
@width-marge:   980px;
@width-bart:    740px;
@width-lisa:    460px;
@width-maggie:  300px;


// Grid columns
@column-width:  8.333%; // 100% / 12 columns
@gutter-width:  20px;

// Column spans for standard column widths
.span(@columns) {
  .border-box;
  float: none;
  clear: both;
  width: auto;

  background: rgba(255,0,0,.1);
  outline: 1px dotted rgba(255,0,0,.2);

  @media @mq-bart {
    float: left;
    clear: none;
    width: @column-width * @columns;
  }
}

.span-all() {
    float: none;
    width: auto;
}


.clearfix() {
    zoom: 1;
    &:after {
        display: block;
        visibility: hidden;
        height: 0;
        clear: both;
        content: ".";
    }
}


// Some mixins from http://markdotto.com/bootstrap
// http://creativecommons.org/licenses/by/3.0/

.transition(@transition: all linear .25s) {
  -webkit-transition: @transition;
  transition: @transition;
}

.transform(@transform: inherit) {
  -webkit-transform: @transform;
  -ms-transform: @transform;
  transform: @transform;
}

.transform-origin(@transform-origin: left top) {
  -webkit-transform-origin: @transform-origin;
  -ms-transform-origin: @transform-origin;
  transform-origin: @transform-origin;
}

.transform-style(@transform-style: inherit) {
  -webkit-transform-style: @transform-style;
  -ms-transform-style: @transform-style;
  transform-style: @transform-style;
}

// Extra mixins for fine-tuned transitions
.transition-property(@transition-property: all) {
  -webkit-transition-property: @transition-property;
  transition-property: @transition-property;
}

.transition-duration(@transition-duration: 1s) {
  -webkit-transition-duration: @transition-duration;
  transition-duration: @transition-duration;
}

.transition-timing-function(@transition-timing-function: linear) {
  -webkit-transition-timing-function: @transition-timing-function;
  transition-timing-function: @transition-timing-function;
}

.transition-delay(@transition-delay: 0s) {
  -webkit-transition-delay: @transition-delay;
  transition-delay: @transition-delay;
}

.animation(@parameters) {
  -webkit-animation: @parameters;
  animation: @parameters;
}

.border-box() {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.flexbox() {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

.flex(@values) {
    -webkit-box-flex: @values;
    -moz-box-flex: @values;
    -webkit-flex: @values;
    -ms-flex: @values;
    flex: @values;
}

.flex-wrap(@value: wrap) {
    -webkit-flex-wrap: wrap;
    -moz-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
}

.align-items(@align: stretch) {
    -webkit-align-items: @align;
       -moz-align-items: @align;
        -ms-align-items: @align;
            align-items: @align;
}

.justify-content(@justify: flex-start) {
    -webkit-justify-content: @justify;
       -moz-justify-content: @justify;
        -ms-justify-content: @justify;
            justify-content: @justify;
}


// Gradients
#gradient {
  .horizontal (@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -webkit-linear-gradient(left, @startColor, @endColor); /* Safari 5.1+, Chrome 10+ */
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@startColor,@endColor); /* IE8+ */
    background-image: linear-gradient(to right, @startColor, @endColor); /* the standard */
  }
  .vertical (@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -webkit-linear-gradient(top, @startColor, @endColor); /* Safari 5.1+, Chrome 10+ */
    -ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor); /* IE8+ */
    background-image: linear-gradient(to bottom, @startColor, @endColor); /* the standard */
  }
  .directional (@startColor: #555, @endColor: #333, @deg: 45deg) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); /* Safari 5.1+, Chrome 10+ */
    background-image: linear-gradient(@deg, @startColor, @endColor); /* the standard */
  }
  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: @endColor;
    background-repeat: no-repeat;
    background-image: -webkit-linear-gradient(top, @startColor 0%, @midColor @colorStop, @endColor 100%); /* Chrome10+,Safari5.1+ */
    background-image: linear-gradient(to bottom, @startColor 0%, @midColor @colorStop, @endColor 100%); /* the standard */
  }
  .radial(@posX:center, @posY:center, @shape:circle, @size:closest-side, @startColor:white, @endColor:black){
    background-image: -webkit-radial-gradient(@posX @posY, @shape @size, @startColor, @endColor);
    background-image: radial-gradient(@shape @size at @posX @posY, @startColor, @endColor);
  }
}



/****************************************************************************/
// Classes used to hide content from users. Choose wisely!

// Hide visually, but not to screen readers
.visually-hidden() {
    position: absolute!important;
    height: 1px;
    width: 1px;
    margin: -1px;
    overflow: hidden;
    clip: rect(0 0 0 0);
    padding: 0;
    border: 0;
}

// Hide visually & from screen readers
.hidden() {
    display: none;
}

/****************************************************************************/

// not the most up to date method, but works in IE7
.image-replaced() {
    text-indent: 120%; // extra 20% to account for fancy fonts that may overhang
    white-space: nowrap;
    overflow: hidden;
}

// Flip an element horizontally for RTL locales such as Arabic. Usually applied
// to :before or :after pseudo-elements with a background-image
.flip-horizontally() {
    .transform(scale(-1, 1));
}

.trailing-arrow() {
    &:after {
        content: "\00A0\00BB"; /* nbsp raquo */
        white-space: nowrap;
    }
}

.leading-arrow() {
    &:before {
        content: "Â« "; /* laquo nbsp */
        white-space: nowrap;
    }
}


.multi-column(@width: auto, @count: auto, @gap: normal) {
  -webkit-column-width: @width;
     -moz-column-width: @width;
       -o-column-width: @width;
          column-width: @width;
  -webkit-column-count: @count;
     -moz-column-count: @count;
       -o-column-count: @count;
          column-count: @count;
    -webkit-column-gap: @gap;
       -moz-column-gap: @gap;
         -o-column-gap: @gap;
            column-gap: @gap;
}

.multi-column-clear() {
  .multi-column(auto, auto, normal);
}

.multi-column-avoid-break() {
            page-break-inside: avoid;
  -webkit-column-break-inside: avoid;
     -moz-column-break-inside: avoid;
       -o-column-break-inside: avoid;
          column-break-inside: avoid;
}

// A helper mixin for applying high-resolution background images (http://www.retinajs.com)
// File-names should follow:
//  example.png
//  example-high-res.png
@highdpi: ~"(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)";
.at2x(@path, @w: auto, @h: auto) {
    background-image: url(@path);
    @at2x_path: ~`@{path}.replace(/\.\w+$/, function(match) { return "-high-res" + match; })`;
    @media @highdpi {
        background-image: url("@{at2x_path}");
        -webkit-background-size: @w @h;
                background-size: @w @h;
    }
}

.background-size(...) {
    -webkit-background-size: @arguments;
            background-size: @arguments;
}
